<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CityRepository extends EntityRepository
{
    /**
     * Searches Cities which name (one of their names) begins with
     * first letters given.
     * Results ordered by City note.
     *
     * @param $firstNormLetters : First letters (normalized please) of the city name
     * @param int $limit : max number of results
     * @return array
     */
    public function searchByFirstLetters($firstNormLetters, $limit = 10)
    {
        $query = $this->getEntityManager()->createQuery(
                 'SELECT DISTINCT c FROM AppBundle:City c, AppBundle:CityName n
                 WHERE n.normName LIKE :firstNormLetters
                 AND   n.city = c
                 ORDER BY c.note DESC'
             )
         ->setParameters(array(
             'firstNormLetters' => $firstNormLetters."%",
         ))
        ->setMaxResults($limit);

        return $query->getResult();


        /*$qb = $this->getEntityManager()->createQueryBuilder();

        $qb->select('t')
            ->from('AppBundle:Trip', 't');

        $parameters = array();

        if ($tripSearch->getDepCityName()) {
            $qb->from('AppBundle:Stop', 'd')
                ->andwhere('d.trip = t')
                ->andWhere('d.cityName = :depName');
            $parameters['depName'] = $tripSearch->getDepCityName();
        }

        if ($tripSearch->getArrCityName()) {
            $qb->from('AppBundle:Stop', 'a')
                ->andwhere('a.trip = t')
                ->andWhere('a.cityName = :arrName');
            $parameters['arrName'] = $tripSearch->getArrCityName();
        }

        $qb->setParameters($parameters);

        return $qb->getQuery()->getResult();*/
    }
}
